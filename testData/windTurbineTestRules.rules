<hasNeighbour>(X, Y) :- <hasNeighbour>(Y, X) .
<hasNeighbour>(X, Y) :- <hasNeighbour>(X, Z) and <hasNeighbour>(Z, Y) .

#<p1>(X, Y) :- <hasNeighbour>(X, Y) .
#<p2>(X, Y) :- <p1>(X, Y) .
#<p3>(X, Y) :- <p2>(X, Y) .
#<p1>(X, Y) :- <p3>(X, Y) and <p2>(X, Y) .

#<hasNeighbourCopy>(X, Y) :- <hasNeighbour>(X, Y) .

#<hasNeighbourCopy2>(X, Y) :- <hasNeighbourCopy>(X, Y) .
#<hasNeighbour>(X, Y) :- <hasNeighbourCopy>(X, Y) .

#<hasNeighbour>(X, Y) :- <hasNeighbourCopy2>(X, Y) .

#<neighbourMaxAirTemperatureMeasurement>(X, Z) :- aggregate( <hasNeighbour>(X, Y) and <hasAirTemperatureMesurement>(Y, T)) on X with max(T) as Z .

#<neighbourMaxAirTemperatureMeasurementPlus1>(X, Y) :- <neighbourMaxAirTemperatureMeasurement>(X, G) and bind(G + 1 as Y) .

#<hasVectorizedNeighbourAirTemperatureMeasurement>(X, Z) :- aggregate( <hasNeighbour>(X, Y) and <hasAirTemperatureMesurement>(Y, T)) on X with vectorize(T) as Z .

#<neighbourAirTemperatureMeasurementVariance>(X, Y) :- <hasVectorizedNeighbourAirTemperatureMeasurement>(X, G) and bind(func:bind_variance(G) as Y) .

#<neighbourMaxAirTemperatureMeasurementPlus1>(X, Y) :- bind(Z+1 as Y) and <neighbourMaxAirTemperatureMeasurement>(X, Z) .

# <HighAirTemperatureDevice>(X) :- <hasAirTemperatureMesurement>(X, Y) and COMP( Y, >, 40) .

#<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>(X, Y) :- <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>(X, Z) and <http://www.w3.org/2000/01/rdf-schema#subClassOf>(Z, Y) .



